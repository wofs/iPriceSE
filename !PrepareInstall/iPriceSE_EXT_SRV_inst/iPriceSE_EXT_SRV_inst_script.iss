; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "iPriceSE"
#define MyAppVersion "0.0.3.100"
#define MyAppPublisher "Дегтярев А.А."
#define MyCopyright "© Дегтярев А.А., 2017-2021"
#define MyAppURL "https://bitbucket.org/wofs/ipricese/wiki/Home.md"
#define MyAppExeName "ipricese.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{C0CEDB3B-1855-4A51-85CA-A43F356EC715}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppCopyright={#MyCopyright}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
VersionInfoProductName={#MyAppName}
VersionInfoVersion={#MyAppVersion}
VersionInfoCompany={#MyAppPublisher}
VersionInfoCopyright={#MyCopyright}
DefaultDirName={autopf}\iPriceSE
DefaultGroupName=iPriceSE
LicenseFile=C:\MyFiles\Strubalin\iPriceSE_setups\iPriceSE_full\src\LICENSE.txt
InfoBeforeFile=C:\MyFiles\Repo\ipricese\!PrepareInstall\iPriceSE_EXT_SRV_inst\AFTER.txt
; Remove the following line to run in administrative install mode (install for all users.)
PrivilegesRequired=admin
PrivilegesRequiredOverridesAllowed=dialog
OutputDir=C:\MyFiles\Strubalin\iPriceSE_setups\bins
OutputBaseFilename=iPriceSE_full
Compression=lzma
SolidCompression=yes
WizardStyle=modern
ArchitecturesAllowed=x64
ArchitecturesInstallIn64BitMode=x64
ShowComponentSizes = true
CloseApplications = true


[Types]
Name: "compact"; Description: "Установить или обновить программу"
Name: "full"; Description: "Установить программу и сервер Firebird 3.0"
Name: "custom"; Description: "Выбрать компоненты"; Flags: iscustom
 
[Components]
Name: "program"; Description: "Файлы программы iPriceSE"; Types: full compact;
Name: "firebird"; Description: "Сервер Firebird 3.0"; Types: full;

[Languages]
Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"

[Files]
Source: "C:\MyFiles\Strubalin\iPriceSE_setups\iPriceSE_full\src\ipricese.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\MyFiles\Strubalin\iPriceSE_setups\iPriceSE_full\src\fbclient.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\MyFiles\Strubalin\iPriceSE_setups\iPriceSE_full\src\libcrypto-1_1-x64.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\MyFiles\Strubalin\iPriceSE_setups\iPriceSE_full\src\libeay32.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\MyFiles\Strubalin\iPriceSE_setups\iPriceSE_full\src\ssleay32.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\MyFiles\Strubalin\iPriceSE_setups\iPriceSE_full\src\LICENSE.txt"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\MyFiles\Strubalin\iPriceSE_setups\iPriceSE_full\src\msvcp100.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\MyFiles\Strubalin\iPriceSE_setups\iPriceSE_full\src\msvcp120.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\MyFiles\Strubalin\iPriceSE_setups\iPriceSE_full\src\msvcr100.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\MyFiles\Strubalin\iPriceSE_setups\iPriceSE_full\src\msvcr120.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\MyFiles\Strubalin\iPriceSE_setups\iPriceSE_full\src\export\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist
Source: "C:\MyFiles\Strubalin\iPriceSE_setups\iPriceSE_full\src\logs\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist
Source: "C:\MyFiles\Strubalin\iPriceSE_setups\iPriceSE_full\src\tmp\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist
Source: "C:\MyFiles\Strubalin\iPriceSE_setups\iPriceSE_full\src\templates\catalog.xls"; DestDir: "{app}\templates"; Flags: onlyifdoesntexist recursesubdirs createallsubdirs 
Source: "C:\MyFiles\Strubalin\iPriceSE_setups\iPriceSE_full\src\base\FBBASE.FDB"; DestDir: "{app}\base"; Flags: onlyifdoesntexist recursesubdirs createallsubdirs
Source: "C:\MyFiles\Strubalin\iPriceSE_setups\iPriceSE_full\src\FBD\dbconfig.ini"; DestDir: "{app}"; Flags: onlyifdoesntexist
Source: "C:\MyFiles\Strubalin\iPriceSE_setups\iPriceSE_full\src\FBD\Firebird-3.0.4.33054_0_x64_pdb.exe"; Components: firebird; DestDir: "{tmp}"; DestName: "Firebird-3.0.exe"; Flags: deleteafterinstall; AfterInstall: InstallFirebird();
Source: "C:\MyFiles\Strubalin\iPriceSE_setups\iPriceSE_full\src\udf\udf_StrMatch.dll"; Components: firebird; DestDir: "{tmp}"; DestName: "udf_StrMatch.dll"; Flags: deleteafterinstall; AfterInstall: InstallFirebirdUDF();
;Source: "C:\Z\Export\iPriceSE_SRC\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Dirs]
Name: {app}\; Permissions: users-modify
Name: {group}\; Permissions: users-modify
Name: {app}\export\; Permissions: users-modify
Name: {app}\logs\; Permissions: users-modify
Name: {app}\tmp\; Permissions: users-modify

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Tasks] 
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"
Name: Finish; Description: По завершении установки: 
Name: Finish\EditSettings; Description: Изменить сетевые настройки программы; Flags: exclusive 
Name: Finish\Run; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: exclusive unchecked 

[Run]
Filename: "{app}\dbconfig.ini"; Description: "Изменить сетевые настройки программы"; Flags: shellexec postinstall skipifsilent; Tasks: Finish\EditSettings
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent; Tasks: Finish\Run

[UninstallDelete]
Type: files; Name: "{app}\iPrice.search"
Type: files; Name: "{app}\ipricese.xml"
Type: files; Name: "{app}\export\*.*"
Type: files; Name: "{app}\logs\*.*"
Type: files; Name: "{app}\tmp\*.*"

[Code]
const // Full list: https://msdn.microsoft.com/en-us/library/windows/desktop/aa376931(v=vs.85).aspx
  ERROR_SUCCESS = 0;
  ERROR_SUCCESS_REBOOT_INITIATED = 1641;
  ERROR_SUCCESS_REBOOT_REQUIRED = 3010;

function GetFirebirdPatch:string;
begin
  RegQueryStringValue(HKEY_LOCAL_MACHINE,'SOFTWARE\Firebird Project\Firebird Server\Instances','DefaultInstance',Result);
end;

procedure UninstallFirebirdExe(FilePath: string; var RebootRequired: boolean);
var
    ResultCode: integer;
begin
  Exec(FilePath, '/SILENT /CLEAN', '', SW_SHOW, ewWaitUntilTerminated, resultCode)
  Log('Firebird is uninstalled with code: ' + IntToStr(resultCode) + '.');
  if resultCode = ERROR_SUCCESS_REBOOT_REQUIRED then
    RebootRequired := true
  else if ResultCode <> ERROR_SUCCESS then
    RaiseException('При удалении сервера Firebird 3.0 произошла ошибка!');
end;

procedure UninstallFirebird();
var
  CurrentRebootRequired: boolean;
  FirebirdPatch: string;
begin
  Log('UninstallFirebird');

  FirebirdPatch:= GetFirebirdPatch();

  try
    DeleteFile(FirebirdPatch+'\UDF\udf_StrMatch.dll');
    UninstallFirebirdExe(ExpandConstant(FirebirdPatch+'\unins000.exe'), CurrentRebootRequired);
  except
    ShowExceptionMessage();

  finally

  end;
end;

procedure InstallFirebirdExe(FilePath: string; var RebootRequired: boolean);
var
    ResultCode: integer;
begin
  Exec(FilePath, '/VERYSILENT', '', SW_SHOW, ewWaitUntilTerminated, resultCode)
  Log('Firebird is installed with code: ' + IntToStr(resultCode) + '.');
  if resultCode = ERROR_SUCCESS_REBOOT_REQUIRED then
    RebootRequired := true
  else if ResultCode <> ERROR_SUCCESS then
    RaiseException('При установке сервера Firebird 3.0 произошла ошибка! Приложение может работать некорректно!');
end;

procedure InstallFirebirdUDF();
var
  FirebirdPatch: string;
begin
  FirebirdPatch:= GetFirebirdPatch();
  FileCopy(ExpandConstant('{tmp}\udf_StrMatch.dll'),FirebirdPatch+'\UDF\udf_StrMatch.dll', false);

end;

procedure InstallFirebird();
var
  statusText: String;
  CurrentRebootRequired: boolean;
  Res: boolean;
begin

  if (Length(GetFirebirdPatch) > 0) then
  begin
    Res := MsgBox('Установка сервера баз данных Firebird:' #13#13 'Найден установленный сервер баз данных Firebird!' #13 'Заменить установленный сервер Firebird?', mbConfirmation, MB_YESNO) = idYes;

    if Res then
    begin
      UninstallFirebird();
    end else
    begin
      MsgBox('Установка сервера баз данных Firebird 3.0 отменена!'#13'Приложение может работать некорректно!', mbInformation, MB_OK);
      exit;
    end;    
  
  end;

  Log('InstallFirebird');

  statusText := WizardForm.StatusLabel.Caption;
  WizardForm.StatusLabel.Caption := 'Установка сервера баз данных Firebird 3.0.';
  WizardForm.ProgressGauge.Style := npbstMarquee;
  try
    InstallFirebirdExe(ExpandConstant('{tmp}\Firebird-3.0.exe'), CurrentRebootRequired)
    //if CurrentRebootRequired then RebootRequired := true;
  except
    ShowExceptionMessage();
    //ExitCode := 1;
  finally
    WizardForm.StatusLabel.Caption := statusText;
    WizardForm.ProgressGauge.Style := npbstNormal;
  end;
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
var
  Res: boolean;
begin
  case CurUninstallStep of
    usUninstall:
      begin
    
      end;
    usPostUninstall:
      begin
        if (Length(GetFirebirdPatch()) = 0) then
          exit;
            
        Res := MsgBox('Завершение удаления:' #13#13 'Удалить установленный ранее сервер Firebird 3.0?', mbConfirmation, MB_YESNO) = idYes;

        if Res then
        begin
          UninstallFirebird();
        end;    
      end;
  end;
end;